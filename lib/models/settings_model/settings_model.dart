import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:freezed_annotation/freezed_annotation.dart';

// required: associates our `settings_model.dart` with the code generated by Freezed
part 'settings_model.freezed.dart';
// optional: Since our ComparisonModel class is serializable, we must add this line.
// But if ComparisonModel was not serializable, we could skip it.
part 'settings_model.g.dart';

class TimestampConverter implements JsonConverter<DateTime, Timestamp> {
  const TimestampConverter();

  @override
  DateTime fromJson(Timestamp json) => json.toDate();

  @override
  Timestamp toJson(DateTime object) => Timestamp.fromDate(object);
}

class TimestampNullableConverter
    implements JsonConverter<DateTime?, Timestamp?> {
  const TimestampNullableConverter();

  @override
  DateTime? fromJson(Timestamp? json) => json?.toDate();

  @override
  Timestamp? toJson(DateTime? object) =>
      object == null ? null : Timestamp.fromDate(object);
}

@freezed
class SettingsModel with _$SettingsModel {
  const factory SettingsModel(
      {bool? isTripChatOn,
      bool? isPushNotificationsOn,
      bool? isTripChangeOn,
      bool? isDirectMessagingOn,
      @TimestampConverter() DateTime? lastUpdated}) = _SettingsModel;

  factory SettingsModel.fromJson(Map<String, Object?> json) =>
      _$SettingsModelFromJson(json);

  factory SettingsModel.mock() {
    return SettingsModel(
        isDirectMessagingOn: true,
        isTripChangeOn: true,
        isPushNotificationsOn: true,
        isTripChatOn: true,
        lastUpdated: DateTime.now());
  }
}
