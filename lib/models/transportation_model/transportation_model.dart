import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:freezed_annotation/freezed_annotation.dart';

// required: associates our `transportation_model.dart` with the code generated by Freezed
part 'transportation_model.freezed.dart';
// optional: Since our ComparisonModel class is serializable, we must add this line.
// But if ComparisonModel was not serializable, we could skip it.
part 'transportation_model.g.dart';

///Model for database transportation

///Model for comparsion data
class TimestampConverter implements JsonConverter<DateTime, Timestamp> {
  const TimestampConverter();

  @override
  DateTime fromJson(Timestamp json) => json.toDate();

  @override
  Timestamp toJson(DateTime object) => Timestamp.fromDate(object);
}

class TimestampNullableConverter implements JsonConverter<DateTime?, Timestamp?> {
  const TimestampNullableConverter();

  @override
  DateTime? fromJson(Timestamp? json) => json?.toDate();

  @override
  Timestamp? toJson(DateTime? object) =>
      object == null ? null : Timestamp.fromDate(object);
}

@freezed
class TransportationModel with _$TransportationModel {
  const factory TransportationModel(
      {required String mode,
      required String airline,
      required String airportCode,
      required bool canCarpool,
      required List<String> carpoolingWith,
      required String comment,
      @TimestampConverter() DateTime? departureDate,
      required String departureDateArrivalTime,
      required String departureDateDepartTime,
      required String displayName,
      required String fieldID,
      required int flightNumber,
      required String location,
      required String returnDateArrivalTime,
      required String returnDateDepartTime,
      @TimestampConverter() DateTime? returnDate,
      required String uid,
      required String tripDocID}) = _TransportationModel;

        factory TransportationModel.fromJson(Map<String, Object?> json)
      => _$TransportationModelFromJson(json);
}