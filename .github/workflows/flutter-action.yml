# This workflow installs the dependencies, run the tests
# and builds the Android app.
# (unless some of the steps are commented out)
#

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
name: Test
jobs:
  build:
    name: Run flutter test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: 1arp/create-a-file-action@0.2
      with:
        file: '.env'
        content: |
          GoogleApiKey = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
          rapidAPIKey = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    - uses: subosito/flutter-action@v1
      with:
        # Uncomment to use a specific version, otherwise we use the latest stable.
        # flutter-version: '3.3.10'
        channel: 'stable'
    - run: flutter pub get
    - run: flutter test
# XXX We could Build and Release apk, but this would probably take a lot more time:
#   - run: flutter build apk --debug --split-per-abi
#   - name: Create a Release APK
#     uses: ncipollo/release-action@v1
#     with:
#       artifacts: "build/app/outputs/apk/debug/*.apk"
#       token: ${{ secrets.TOKEN }}
